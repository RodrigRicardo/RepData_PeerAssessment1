dir()
x<-rnorm(100)
source(my_code.R)
getwd()
getwd()
setwd("~/Documents/Specialization/R_course_R_files")
setwd("/Documents/Specialization/R_course_R_files")
setwd("home/ricardo/Documents/Specialization/R_course_R_files")
setwd("home/ricardo/Documents/Specialization/R_course/R_files")
myfunction<-function(){
x<-rnorm(100)
}
mean(x)
myfunction<-function(){
x<-rnorm(100)
mean(x)
}
second(x)
library(datasets)
data(iris)
?iris
x<-data.frame()
x<-iris
x
xmean(subset(x, Species==virginica)$Sepal.Length)
mean(subset(x, Species==virginica)$Sepal.Length)
x
class(x)
x[[Species]]
colnames(x)
mean(subset(x, "Species"==virginica)$Sepal.Length)
mean(subset(x, Species==virginica)$Sepal.Length)
mean(subset(x, Species=="virginica")$Sepal.Length)
apply(x[,1:4],2,mean)
apply(x[,1:4],1,mean)
data(mtcars)
mtcars
mean(subset(mtcars, cyl==8)$hp)-mean(subset(mtcars, cyl==4)$hp)
debug(ls)
ls
c
q
install.packages("httr")
url<-"https://scholar.google.com/citations?user=HI-I6C0AAAAJ"
content<-getURL(url)
library(XML)
library(RCurl)
url<-"https://scholar.google.com/citations?user=HI-I6C0AAAAJ"
content<-getURL(url)
doc1<-htmlTreeParse(content,useInternalNodes = T)
summary(doc1)
xpathSApply(doc1,"//title&gt",xmlValue)
xpathSApply(doc1,"title&gt",xmlValue)
date()
class(d1)
d1<-date()
class(d1)
d2<-Sys.Date()
d2
class(d2)
format(d2,"%a %b %d")
x<-c("1jan1960","2jan1960","31mar1960","30jul1960")
z<-as.Date(x,"%d%b%Y")
z
z[1]-z[2]
as.numeric(z[1]-z[2])
weekdays(d2)
months(d2)
julian(d2)
install.packages("lubridate")
library(lubridate)
ymd("20140108")
mdy("08/04/2013")
dmy("03-04-2013")
ymd_hms("2011-08-03 10:15:03")
ymd_hms("2011-08-03 10:15:03", tz="Pacific/Auckland")
?Sys.timezone
wday(x[1])
x<-dmy(c("1jan1960","2jan1960","31mar1960","30jul1960"))
wday(x[1])
wday(x[1], label=T)
?POSIXct
dataHousehold<-read.table("household_power_consumption.txt",header=T,sep=";", stringsAsFactors = F)
library(lattice)
library(datasets)
# xyplot(y~x | f*g, data)
xyplot(Ozone~Wind, data=airquality)
irquality<-trasform(airquality,Month=factor(Month))
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
set.seed(10)
x<-rnorm(100)
f<-rep(0:1, each=50)
y<-x+f -f*x+rnorm(100,sd=0.5)
f<-factor(f,labels = c("Group 1", "Group 2"))
xyplot(y~x | f, layout=c(2,1))
xyplot(y~x | f, panel = function(x,y,...)
{
panel.xyplot(x,y,...)
panel.abline(h=median(y),lty=2)
})
xyplot(y~x | f, panel = function(x,y,...)
{
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
install.packages("ProjectTemplate")
install.packages("xtable")
install.packages("xtable")
install.packages(c("anytime", "backports", "jsonlite", "quantmod", "Rcpp", "tibble"))
devtools::install_github("rstudio/rmarkdown")
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
unzip("activity.zip",overwrite=F)
dataRaw<-read.csv("activity.csv", header = T)
dataRaw$date<-as.Date(dataRaw$date, format = "%Y-%m-%d")
## Find the total steps for each day
daily.sum<-aggregate(dataRaw$steps,by=list(dataRaw$date),FUN=sum)
## Give good names to each column
colnames(daily.sum)<-c("date","totalSum")
## Let's plot the histogram
hist(daily.sum$totalSum, xlab="Number of steps", main ="Fequency of total number of  daily steps" )
mean.raw<-mean(daily.sum$totalSum, na.rm=TRUE)
print(paste("Mean number of steps per day : ",mean.raw))
median.raw<-median(daily.sum$totalSum,na.rm =TRUE)
print(paste("Median number of steps per day: ",median.raw))
activity.pattern<-aggregate(dataRaw$steps,by=list(dataRaw$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern)<-c("interval","mean")
plot(activity.pattern$interval,activity.pattern$mean, type = "l", xlab = "Interval",ylab = "Mean",main = "Time series of daily activity pattern across all days")
## Find the maximum interval of average daily activity
activity.pattern[which.max(activity.pattern$mean),]
summary(dataRaw)
data<-merge(dataRaw,activity.pattern, by="interval")
for(i in 1:length(data$steps)){
if (is.na(data[i,2])) {
#print(data[i,2])
data[i,2]<-data[i,4]
}
}
summary(data)
daily.sum.input<-aggregate(data$steps,by=list(data$date),FUN=sum, na.rm=TRUE)
## Give good names to each column
colnames(daily.sum.input)<-c("date","totalSum")
## Let's plot the histogram
hist(daily.sum.input$totalSum, xlab="Number of steps", main ="Fequency of total number of  daily steps" )
mean.input<-mean(daily.sum.input$totalSum, na.rm=TRUE)
print(paste("Mean number of steps per day : ",mean.input))
median.input<-median(daily.sum.input$totalSum,na.rm =TRUE)
print(paste("Median number of steps per day: ",median.input))
activity.pattern<-aggregate(dataRaw$steps,by=list(dataRaw$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern)<-c("interval","mean")
plot(activity.pattern$interval,activity.pattern$mean, type = "l", xlab = "Interval",ylab = "Mean",main = "Time series of daily activity pattern across all days")
## Find the maximum interval of average daily activity
activity.pattern[which.max(activity.pattern$mean),]
head(data)
data$day<-weekdays(data$date)
head(data)
data$day<-weekdays(data$date)
weekdayNames<-c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
data$factor.day<-factor(data$day %in% weekdayNames,levels=c(FALSE,TRUE), labels=c("weekend","weekday"))
head(data)
data[1,2]
data[1,5]
data[1,5] %in% weekdayNames
data$day<-weekdays(data$date)
weekdayNames<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
data$factor.day<-factor(data$day %in% weekdayNames,levels=c(FALSE,TRUE), labels=c("weekend","weekday"))
head(data)
dataWeekdays<-data<-[which(data$factor.day=="weekday")]
dataWeekdays<-data<-[which(data$factor.day=="weekday"),]
dataWeekdays<-data[ which(data$factor.day=="weekday"),]
dataWeekends<-data[ which(data$factor.day=="weekend"),]
head(dataWeekdays)
activity.pattern.weekday<-aggregate(dataWeekdays$steps,by=list(dataWeekdays$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern.weekday)<-c("interval","mean")
plot(activity.pattern.weekday$interval,activity.pattern$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across all days")
activity.pattern.weekday<-aggregate(dataWeekdays$steps,by=list(dataWeekdays$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern.weekday)<-c("interval","mean")
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekdays")
activity.pattern.weekday<-aggregate(dataWeekdays$steps,by=list(dataWeekdays$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern.weekday)<-c("interval","mean")
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekdays")
activity.pattern.weekend<-aggregate(dataWeekends$steps,by=list(dataWeekends$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern.weekend)<-c("interval","mean")
plot(activity.pattern.weekend$interval,activity.pattern.weekend$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekend")
activity.pattern.weekday<-aggregate(dataWeekdays$steps,by=list(dataWeekdays$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern.weekday)<-c("interval","mean")
activity.pattern.weekend<-aggregate(dataWeekends$steps,by=list(dataWeekends$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern.weekend)<-c("interval","mean")
par(mfrow=c(1,1))
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekdays")
plot(activity.pattern.weekend$interval,activity.pattern.weekend$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekend")
activity.pattern.weekday<-aggregate(dataWeekdays$steps,by=list(dataWeekdays$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern.weekday)<-c("interval","mean")
activity.pattern.weekend<-aggregate(dataWeekends$steps,by=list(dataWeekends$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern.weekend)<-c("interval","mean")
par(mfrow=c(1,1))
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekdays")
plot(activity.pattern.weekend$interval,activity.pattern.weekend$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekend")
par(mfrow=c(1,1))
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekdays")
plot(activity.pattern.weekend$interval,activity.pattern.weekend$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekend")
par(mfrow=c(1,1))
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekdays")
#plot(activity.pattern.weekend$interval,activity.pattern.weekend$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekend")
par(mfrow=c(1,1))
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekdays")
plot(activity.pattern.weekend$interval,activity.pattern.weekend$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekend")
setwd("~/Documents/Specialization/Reproducible_research/Week_2/data/RepData_PeerAssessment1")
unzip("activity.zip",overwrite=F)
dataRaw<-read.csv("activity.csv", header = T)
dataRaw$date<-as.Date(dataRaw$date, format = "%Y-%m-%d")
## Find the total steps for each day
daily.sum<-aggregate(dataRaw$steps,by=list(dataRaw$date),FUN=sum)
## Give good names to each column
colnames(daily.sum)<-c("date","totalSum")
## Let's plot the histogram
hist(daily.sum$totalSum, xlab="Number of steps", main ="Frequency of total number of  daily steps" )
mean.raw<-mean(daily.sum$totalSum, na.rm=TRUE)
print(paste("Mean number of steps per day : ",mean.raw))
median.raw<-median(daily.sum$totalSum,na.rm =TRUE)
print(paste("Median number of steps per day: ",median.raw))
activity.pattern<-aggregate(dataRaw$steps,by=list(dataRaw$interval),FUN=mean, na.rm=TRUE)
colnames(activity.pattern)<-c("interval","mean")
plot(activity.pattern$interval,activity.pattern$mean, type = "l", xlab = "Interval",ylab = "Mean",main = "Time series of daily activity pattern across all days")
## Find the maximum interval of average daily activity
activity.pattern[which.max(activity.pattern$mean),]
summary(dataRaw)
data<-merge(dataRaw,activity.pattern, by="interval")
for(i in 1:length(data$steps)){
if (is.na(data[i,2])) {
#print(data[i,2])
data[i,2]<-data[i,4]
}
}
summary(data)
daily.sum.input<-aggregate(data$steps,by=list(data$date),FUN=sum, na.rm=TRUE)
## Give good names to each column
colnames(daily.sum.input)<-c("date","totalSum")
## Let's plot the histogram
hist(daily.sum.input$totalSum, xlab="Number of steps", main ="Frequency of total number of  daily steps" )
mean.input<-mean(daily.sum.input$totalSum, na.rm=TRUE)
print(paste("Mean number of steps per day : ",mean.input))
median.input<-median(daily.sum.input$totalSum,na.rm =TRUE)
print(paste("Median number of steps per day: ",median.input))
data$day<-weekdays(data$date)
weekdayNames<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
data$factor.day<-factor(data$day %in% weekdayNames,levels=c(FALSE,TRUE), labels=c("weekend","weekday"))
dataWeekdays<-data[ which(data$factor.day=="weekday"),]
dataWeekends<-data[ which(data$factor.day=="weekend"),]
knit_with_parameters('~/Documents/Specialization/Reproducible_research/Week_2/data/RepData_PeerAssessment1/PA1_template.Rmd')
par(mfcol=c(1,2))
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l", xlab = "Interval",ylab = "Mean number of steps",main = "Time series of daily activity pattern across weekdays")
par(mfcol=c(2,1))
plot(activity.pattern.weekday$interval,activity.pattern.weekday$mean, type = "l",xlab="", ylab="",main = "Weekdays")
